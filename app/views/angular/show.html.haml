%div{data: {ng_controller: 'ApplicationController'}}
	%div.flash-messages{data: {ng_controller: 'FlashController'}}
		%div.flash{data: {ng_repeat: 'message in messages', ng_class: "{'error': (message.type == 'error'), 'success': (message.type =='success')}"}}
			{{message.body}}
			%span.close
				&times;
	
	
	%div{data: {ng_controller: 'StoreController'}}
		-# Nav bar
		%nav.navbar.navbar-default
			%button.btn.btn-primary{data: {ng_click: "showNewProductForm = true", ng_show: 'currentAdmin'}} New gem
			%button.btn.btn-default{data: {ng_click: "showNewProductForm = false", ng_show: "showNewProductForm"}} Cancel
			%a.btn.btn-default{href: "/#/admin", data: {ng_hide: 'currentAdmin'}} Admin
			%a.btn.btn-default{href: '/#/'} Store
			%div.pull-right{data: {ng_show: 'currentAdmin'}}
				%span
					Signed in as {{currentAdmin.email}}
				%a.btn.btn-default{data: {ng_click: 'logout()'}}
					Sign out
		%div.fluid-container{data: {ng_show: 'showNewProductForm', ng_controller: 'ProductCtrl'}}
			.row
				%form{name: 'newProductForm', novalidate: true, data: {ng_submit: 'create()'}}
					.col-md-3
						.form-group{data: {ng_class: "{'has-error': newProductForm.name.$invalid && newProductForm.name.$dirty}"}}
							%input.form-control{name: 'name', required: true, placeholder: 'Name', type: 'text', data: {ng_model: 'newProduct.name'}}
						.form-group{data: {ng_class: "{'has-error': newProductForm.description.$invalid && newProductForm.description.$dirty}"}}	
							%input.form-control{name: 'description', required: true, placeholder: 'Description', type: 'text', data: {ng_model: 'newProduct.description'}}
						.form-group{data: {ng_class: "{'has-error': newProductForm.shine.$invalid && newProductForm.shine.$dirty}"}}
							%input.form-control{name: 'shine', required: true, placeholder: 'Shine', type: 'text', data: {ng_model: 'newProduct.shine'}}
						.form-group{data: {ng_class: "{'has-error': newProductForm.price.$invalid && newProductForm.price.$dirty}"}}
							%input.form-control{name: 'price', required: true, placeholder: 'Price', type: 'text', data: {ng_model: 'newProduct.price'}}
					.col-md-3
						.form-group{data: {ng_class: "{'has-error': newProductForm.rarity.$invalid && newProductForm.rarity.$dirty}"}}
							%input.form-control{name: 'rarity', required: true, placeholder: 'Rarity', type: 'text', data: {ng_model: 'newProduct.rarity'}}
						.form-group{data: {ng_class: "{'has-error': newProductForm.color.$invalid && newProductForm.color.$dirty}"}}
							%input.form-control{name: 'color', required: true, placeholder: 'Color', type: 'text', data: {ng_model: 'newProduct.color'}}
						.form-group{data: {ng_class: "{'has-error': newProductForm.faces.$invalid && newProductForm.faces.$dirty}"}}
							%input.form-control{name: 'faces', required: true, placeholder: 'Faces', type: 'text', data: {ng_model: 'newProduct.faces'}}
						%button.btn.btn-primary{type: 'submit', data: {ng_disabled: "newProductForm.$invalid"}} Add product
		%div{data: {ng_view: ''}}